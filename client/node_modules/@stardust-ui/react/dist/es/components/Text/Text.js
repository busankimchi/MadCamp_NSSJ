import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import * as customPropTypes from '@stardust-ui/react-proptypes';
import * as PropTypes from 'prop-types';
import * as React from 'react';
import { childrenExist, createShorthandFactory, UIComponent, commonPropTypes, rtlTextContainer } from '../../lib';
import { withSafeTypeForAs } from '../../types';

var Text =
/*#__PURE__*/
function (_UIComponent) {
  _inherits(Text, _UIComponent);

  function Text() {
    _classCallCheck(this, Text);

    return _possibleConstructorReturn(this, _getPrototypeOf(Text).apply(this, arguments));
  }

  _createClass(Text, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var accessibility = _ref.accessibility,
          ElementType = _ref.ElementType,
          classes = _ref.classes,
          unhandledProps = _ref.unhandledProps;
      var _this$props = this.props,
          children = _this$props.children,
          content = _this$props.content;
      return React.createElement(ElementType, _extends({
        className: classes.root
      }, rtlTextContainer.getAttributes({
        forElements: [children, content]
      }), accessibility.attributes.root, unhandledProps), childrenExist(children) ? children : content);
    }
  }]);

  return Text;
}(UIComponent);

_defineProperty(Text, "create", void 0);

_defineProperty(Text, "className", 'ui-text');

_defineProperty(Text, "displayName", 'Text');

_defineProperty(Text, "propTypes", Object.assign({}, commonPropTypes.createCommon({
  color: true
}), {
  atMention: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['me'])]),
  disabled: PropTypes.bool,
  error: PropTypes.bool,
  important: PropTypes.bool,
  size: customPropTypes.size,
  weight: PropTypes.oneOf(['light', 'semilight', 'regular', 'semibold', 'bold']),
  success: PropTypes.bool,
  temporary: PropTypes.bool,
  align: customPropTypes.align,
  timestamp: PropTypes.bool,
  truncated: PropTypes.bool
}));

_defineProperty(Text, "defaultProps", {
  as: 'span'
});

Text.create = createShorthandFactory({
  Component: Text,
  mappedProp: 'content'
});
/**
 * A Text consistently styles and formats occurrences of text.
 */

export default withSafeTypeForAs(Text);