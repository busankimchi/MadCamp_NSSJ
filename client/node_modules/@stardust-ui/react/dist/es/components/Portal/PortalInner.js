import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _invoke from "lodash/invoke";
import * as PropTypes from 'prop-types';
import * as React from 'react';
import * as ReactDOM from 'react-dom'; // @ts-ignore

import { ThemeContext } from 'react-fela';
import { isBrowser, commonPropTypes } from '../../lib';

/**
 * A PortalInner is a container for Portal's content.
 */
var PortalInner =
/*#__PURE__*/
function (_React$Component) {
  _inherits(PortalInner, _React$Component);

  function PortalInner() {
    _classCallCheck(this, PortalInner);

    return _possibleConstructorReturn(this, _getPrototypeOf(PortalInner).apply(this, arguments));
  }

  _createClass(PortalInner, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      _invoke(this.props, 'onMount', this.props);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      _invoke(this.props, 'onUnmount', this.props);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          mountNode = _this$props.mountNode;
      var target = isBrowser() ? this.context.target.body : null;
      var container = mountNode || target;
      return container && ReactDOM.createPortal(children, container);
    }
  }]);

  return PortalInner;
}(React.Component);

_defineProperty(PortalInner, "contextType", ThemeContext);

_defineProperty(PortalInner, "propTypes", Object.assign({}, commonPropTypes.createCommon({
  accessibility: false,
  animated: false,
  as: false,
  className: false,
  content: false,
  styled: false
}), {
  mountNode: PropTypes.object,
  onMount: PropTypes.func,
  onUnmount: PropTypes.func
}));

export default PortalInner;