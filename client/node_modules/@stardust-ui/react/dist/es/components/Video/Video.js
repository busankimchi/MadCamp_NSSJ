import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { Ref } from '@stardust-ui/react-component-ref';
import * as PropTypes from 'prop-types';
import * as React from 'react';
import { createShorthandFactory, UIComponent, commonPropTypes } from '../../lib';
import { withSafeTypeForAs } from '../../types';

var Video =
/*#__PURE__*/
function (_UIComponent) {
  _inherits(Video, _UIComponent);

  function Video() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Video);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Video)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "videoRef", React.createRef());

    _defineProperty(_assertThisInitialized(_this), "setVideoAttributes", function () {
      // React doesn't guaranty that props will be set:
      // https://github.com/facebook/react/issues/10389
      if (_this.videoRef.current) {
        _this.videoRef.current.muted = !!_this.props.muted;
      }
    });

    return _this;
  }

  _createClass(Video, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.setVideoAttributes();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.setVideoAttributes();
    }
  }, {
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var accessibility = _ref.accessibility,
          ElementType = _ref.ElementType,
          classes = _ref.classes,
          unhandledProps = _ref.unhandledProps;
      var _this$props = this.props,
          controls = _this$props.controls,
          autoPlay = _this$props.autoPlay,
          loop = _this$props.loop,
          poster = _this$props.poster,
          src = _this$props.src;
      return React.createElement(Ref, {
        innerRef: this.videoRef
      }, React.createElement(ElementType, _extends({
        autoPlay: autoPlay,
        className: classes.root,
        controls: controls,
        loop: loop,
        poster: poster,
        src: src
      }, accessibility.attributes.root, unhandledProps)));
    }
  }]);

  return Video;
}(UIComponent);

_defineProperty(Video, "create", void 0);

_defineProperty(Video, "className", 'ui-video');

_defineProperty(Video, "displayName", 'Video');

_defineProperty(Video, "propTypes", Object.assign({}, commonPropTypes.createCommon({
  children: false,
  content: false
}), {
  autoPlay: PropTypes.bool,
  controls: PropTypes.bool,
  loop: PropTypes.bool,
  muted: PropTypes.bool,
  poster: PropTypes.string,
  src: PropTypes.string
}));

_defineProperty(Video, "defaultProps", {
  as: 'video',
  controls: true,
  autoPlay: false,
  muted: false
});

Video.create = createShorthandFactory({
  Component: Video,
  mappedProp: 'src'
});
/**
 * A Video provides ability to embed video content.
 */

export default withSafeTypeForAs(Video);