import _extends from "@babel/runtime/helpers/esm/extends";
import * as React from 'react';
import { commonPropTypes } from '../../lib';
import createComponent from '../../lib/createComponent';
import { withSafeTypeForAs } from '../../types';
var ProviderBox = createComponent({
  displayName: 'ProviderBox',
  className: 'ui-provider__box',
  propTypes: Object.assign({}, commonPropTypes.createCommon()),
  render: function render(config, props) {
    var ElementType = config.ElementType,
        classes = config.classes,
        unhandledProps = config.unhandledProps;
    var children = props.children;

    if (ElementType === React.Fragment) {
      // do not spread anything - React.Fragment can only have `key` and `children` props.
      return React.createElement(React.Fragment, null, children);
    }

    return React.createElement(ElementType, _extends({
      className: classes.root
    }, unhandledProps), children);
  }
});
/**
 * The ProviderBox passes the CSS-in-JS renderer, theme styles and other settings to Stardust components.
 * Also, being comapred to Provider, it additionally renders an element to the DOM (`div` by default).
 */

export default withSafeTypeForAs(ProviderBox);