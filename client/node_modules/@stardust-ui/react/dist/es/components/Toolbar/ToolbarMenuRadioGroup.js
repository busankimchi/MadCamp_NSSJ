import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _map from "lodash/map";
import _invoke from "lodash/invoke";
import * as customPropTypes from '@stardust-ui/react-proptypes';
import * as PropTypes from 'prop-types';
import * as React from 'react';
import { createShorthandFactory, commonPropTypes, applyAccessibilityKeyHandlers, UIComponent } from '../../lib';
import { withSafeTypeForAs } from '../../types';
import { toolbarMenuRadioGroupBehavior, toolbarMenuItemRadioBehavior } from '@stardust-ui/accessibility';
import ToolbarMenuItem from './ToolbarMenuItem';
import { mergeComponentVariables } from '../../lib/mergeThemes';
import Box from '../Box/Box';

var ToolbarMenuRadioGroup =
/*#__PURE__*/
function (_UIComponent) {
  _inherits(ToolbarMenuRadioGroup, _UIComponent);

  function ToolbarMenuRadioGroup() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, ToolbarMenuRadioGroup);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToolbarMenuRadioGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "handleItemOverrides", function (variables) {
      return function (predefinedProps) {
        return {
          onClick: function onClick(e, itemProps) {
            _invoke(predefinedProps, 'onClick', e, itemProps);

            _invoke(_this.props, 'onItemClick', e, itemProps);
          },
          variables: mergeComponentVariables(variables, predefinedProps.variables),
          wrapper: null
        };
      };
    });

    return _this;
  }

  _createClass(ToolbarMenuRadioGroup, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var _this2 = this;

      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          unhandledProps = _ref.unhandledProps,
          accessibility = _ref.accessibility,
          styles = _ref.styles;
      var _this$props = this.props,
          activeIndex = _this$props.activeIndex,
          items = _this$props.items,
          variables = _this$props.variables,
          wrapper = _this$props.wrapper;
      var content = React.createElement(ElementType, _extends({
        className: classes.root
      }, accessibility.attributes.root, unhandledProps, applyAccessibilityKeyHandlers(accessibility.keyHandlers.root, unhandledProps)), _map(items, function (item, index) {
        return ToolbarMenuItem.create(item, {
          defaultProps: function defaultProps() {
            return {
              accessibility: toolbarMenuItemRadioBehavior,
              as: 'li',
              active: activeIndex === index,
              index: index
            };
          },
          overrideProps: _this2.handleItemOverrides(variables)
        });
      }));
      return Box.create(wrapper, {
        defaultProps: function defaultProps() {
          return Object.assign({
            as: 'li',
            className: ToolbarMenuRadioGroup.slotClassNames.wrapper,
            styles: styles.wrapper
          }, accessibility.attributes.wrapper, applyAccessibilityKeyHandlers(accessibility.keyHandlers.wrapper, wrapper));
        },
        overrideProps: {
          children: content
        }
      });
    }
  }]);

  return ToolbarMenuRadioGroup;
}(UIComponent);

_defineProperty(ToolbarMenuRadioGroup, "displayName", 'ToolbarMenuRadioGroup');

_defineProperty(ToolbarMenuRadioGroup, "create", void 0);

_defineProperty(ToolbarMenuRadioGroup, "className", 'ui-toolbars');

_defineProperty(ToolbarMenuRadioGroup, "slotClassNames", {
  wrapper: "".concat(ToolbarMenuRadioGroup.className, "__wrapper")
});

_defineProperty(ToolbarMenuRadioGroup, "propTypes", Object.assign({}, commonPropTypes.createCommon(), {
  activeIndex: PropTypes.number,
  items: customPropTypes.collectionShorthand,
  onItemClick: PropTypes.func,
  wrapper: customPropTypes.itemShorthand
}));

_defineProperty(ToolbarMenuRadioGroup, "defaultProps", {
  as: 'ul',
  accessibility: toolbarMenuRadioGroupBehavior,
  wrapper: {}
});

ToolbarMenuRadioGroup.create = createShorthandFactory({
  Component: ToolbarMenuRadioGroup
});
/**
 * A ToolbarMenuRadioGroup renders ToolbarMenuItem as a group of mutually exclusive options.
 */

export default withSafeTypeForAs(ToolbarMenuRadioGroup);