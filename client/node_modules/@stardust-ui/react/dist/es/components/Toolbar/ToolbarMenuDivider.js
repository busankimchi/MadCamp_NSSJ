import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import * as React from 'react';
import { createShorthandFactory, UIComponent, commonPropTypes } from '../../lib';
import { withSafeTypeForAs } from '../../types';

var ToolbarMenuDivider =
/*#__PURE__*/
function (_UIComponent) {
  _inherits(ToolbarMenuDivider, _UIComponent);

  function ToolbarMenuDivider() {
    _classCallCheck(this, ToolbarMenuDivider);

    return _possibleConstructorReturn(this, _getPrototypeOf(ToolbarMenuDivider).apply(this, arguments));
  }

  _createClass(ToolbarMenuDivider, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          unhandledProps = _ref.unhandledProps,
          accessibility = _ref.accessibility;
      return React.createElement(ElementType, _extends({}, accessibility.attributes.root, unhandledProps, {
        className: classes.root
      }));
    }
  }]);

  return ToolbarMenuDivider;
}(UIComponent);

_defineProperty(ToolbarMenuDivider, "displayName", 'ToolbarMenuDivider');

_defineProperty(ToolbarMenuDivider, "create", void 0);

_defineProperty(ToolbarMenuDivider, "className", 'ui-toolbar__menudivider');

_defineProperty(ToolbarMenuDivider, "propTypes", Object.assign({}, commonPropTypes.createCommon()));

_defineProperty(ToolbarMenuDivider, "defaultProps", {
  as: 'li'
});

ToolbarMenuDivider.create = createShorthandFactory({
  Component: ToolbarMenuDivider,
  mappedProp: 'content'
});
/**
 * A ToolbarMenuDivider adds non-actionable separator between items of ToolbarMenu.
 */

export default withSafeTypeForAs(ToolbarMenuDivider);