import { CreateComponentReturnType } from './createComponent';
import * as React from 'react';
import { ComponentSlotClasses, ComponentSlotStylesPrepared } from '../themes/types';
import { ReactAccessibilityBehavior, AccessibilityActionHandlers } from './accessibility/reactTypes';
import { ObjectOf } from '../types';
export interface RenderStardustResultConfig {
    accessibility: ReactAccessibilityBehavior;
    classes: ComponentSlotClasses;
    rtl: boolean;
    styles: ComponentSlotStylesPrepared;
}
export interface CreateStardustComponentConfig<P> {
    displayName: string;
    className?: string;
    render: (props: P & {
        stardust: RenderStardustResultConfig;
    }) => React.ReactNode;
    defaultProps?: any;
    actionHandlers?: AccessibilityActionHandlers;
}
declare const createComponent: <P extends ObjectOf<any> = any>({ displayName, className, render, defaultProps, actionHandlers, }: CreateStardustComponentConfig<P>) => CreateComponentReturnType<P>;
export default createComponent;
