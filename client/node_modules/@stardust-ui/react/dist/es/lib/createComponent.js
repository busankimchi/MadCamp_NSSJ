import _keys from "lodash/keys";
import * as React from 'react';
// @ts-ignore
import { ThemeContext } from 'react-fela';
import renderComponent from './renderComponent';
import { createShorthandFactory } from './factories';

var createComponent = function createComponent(_ref) {
  var _ref$displayName = _ref.displayName,
      displayName = _ref$displayName === void 0 ? 'StardustComponent' : _ref$displayName,
      _ref$className = _ref.className,
      className = _ref$className === void 0 ? 'ui-stardust-component' : _ref$className,
      _ref$shorthandPropNam = _ref.shorthandPropName,
      shorthandPropName = _ref$shorthandPropNam === void 0 ? 'children' : _ref$shorthandPropNam,
      _ref$defaultProps = _ref.defaultProps,
      defaultProps = _ref$defaultProps === void 0 ? {} : _ref$defaultProps,
      _ref$handledProps = _ref.handledProps,
      handledProps = _ref$handledProps === void 0 ? [] : _ref$handledProps,
      propTypes = _ref.propTypes,
      actionHandlers = _ref.actionHandlers,
      _render = _ref.render;
  var mergedDefaultProps = Object.assign({
    as: 'div'
  }, defaultProps);

  var StardustComponent = function StardustComponent(props) {
    // Stores debug information for component.
    // Note that this ref should go as the first one, to be discoverable by debug utils.
    var ref = React.useRef(null);
    var context = React.useContext(ThemeContext);
    return renderComponent({
      className: className,
      displayName: displayName,
      handledProps: _keys(propTypes).concat(handledProps),
      props: props,
      state: {},
      actionHandlers: actionHandlers,
      render: function render(config) {
        return _render(config, props);
      },
      saveDebug: function saveDebug(stardustDebug) {
        return ref.current = {
          stardustDebug: stardustDebug
        };
      }
    }, context);
  };

  StardustComponent.className = className;
  StardustComponent.create = createShorthandFactory({
    Component: mergedDefaultProps.as,
    mappedProp: shorthandPropName
  });
  StardustComponent.displayName = displayName;
  StardustComponent.propTypes = propTypes; // TODO: generate prop types

  StardustComponent.defaultProps = mergedDefaultProps;
  return StardustComponent;
};

export default createComponent;