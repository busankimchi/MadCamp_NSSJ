import getPointerStyles from '../../getPointerStyles';
import pointerSvg from '../../pointerSvgUrl';

var getPointerOffset = function getPointerOffset(placement, v) {
  return placement === 'top-start' || placement === 'top' || placement === 'top-end' || placement === 'bottom-end' || placement === 'bottom' || placement === 'bottom-start' ? v.pointerVerticalOffset : v.pointerHorizontalOffset;
};

var tooltipContentStyles = {
  root: function root(_ref) {
    var p = _ref.props,
        v = _ref.variables,
        rtl = _ref.rtl;
    var svgPointerStyles = getPointerStyles(getPointerOffset(p.placement, v), v.pointerMargin, rtl, p.placement, true);
    return Object.assign({
      borderRadius: v.borderRadius,
      display: 'block',
      maxWidth: v.maxWidth,
      color: v.color,
      background: v.backgroundColor
    }, p.pointing && svgPointerStyles.root);
  },
  pointer: function pointer(_ref2) {
    var p = _ref2.props,
        v = _ref2.variables,
        rtl = _ref2.rtl;
    var svgPointerStyles = getPointerStyles(getPointerOffset(p.placement, v), v.pointerMargin, rtl, p.placement, true);
    return Object.assign({
      display: 'block',
      position: 'absolute',
      overflow: 'hidden',
      width: v.pointerWidth,
      height: v.pointerHeight,
      backgroundImage: pointerSvg(v.backgroundColor)
    }, svgPointerStyles.pointer);
  },
  content: function content(_ref3) {
    var p = _ref3.props,
        v = _ref3.variables;
    return {
      display: 'block',
      padding: v.padding,
      borderRadius: 'inherit',
      boxShadow: v.boxShadow
    };
  }
};
export default tooltipContentStyles;