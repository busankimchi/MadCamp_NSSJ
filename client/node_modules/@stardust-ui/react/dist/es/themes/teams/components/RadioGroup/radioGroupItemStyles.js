import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { pxToRem } from '../../../../lib';
import Icon from '../../../../components/Icon/Icon';
import getBorderFocusStyles from '../../getBorderFocusStyles';
import getIconFillOrOutlineStyles from '../../getIconFillOrOutlineStyles';

var restHoverFocusTextColor = function restHoverFocusTextColor(textColor) {
  return {
    color: textColor,
    ':hover': {
      color: textColor
    },
    ':focus': {
      color: textColor
    }
  };
};

var radioStyles = {
  root: function root(_ref) {
    var p = _ref.props,
        v = _ref.variables,
        siteVariables = _ref.theme.siteVariables;
    return Object.assign({
      position: 'relative',
      alignItems: 'center',
      borderStyle: 'solid',
      borderWidth: "".concat(pxToRem(1)),
      borderColor: 'transparent',
      borderRadius: "".concat(pxToRem(2)),
      color: v.textColorDefault,
      cursor: 'pointer',
      display: p.vertical ? 'flex' : 'inline-flex',
      fontSize: v.textFontSize,
      padding: v.padding,
      ':hover': _defineProperty({
        color: v.textColorDefaultHoverFocus
      }, "& .".concat(Icon.className), {
        color: v.iconBorderColorDefaultHover
      }),
      ':focus': {
        color: v.textColorDefaultHoverFocus
      }
    }, p.checked && Object.assign({}, restHoverFocusTextColor(v.textColorChecked)), p.disabled && Object.assign({}, restHoverFocusTextColor(v.colorDisabled)), getBorderFocusStyles({
      siteVariables: siteVariables
    }));
  },
  icon: function icon(_ref2) {
    var p = _ref2.props,
        v = _ref2.variables;
    return Object.assign({
      // overrides from icon styles
      boxShadow: 'none',
      margin: "0 ".concat(pxToRem(12), " 0 0")
    }, getIconFillOrOutlineStyles({
      outline: !p.checked
    }), p.checked && {
      color: v.iconBackgroundColorChecked
    }, p.disabled && {
      color: v.colorDisabled
    }, p.checked && p.disabled && {
      color: v.colorDisabled
    });
  }
};
export default radioStyles;