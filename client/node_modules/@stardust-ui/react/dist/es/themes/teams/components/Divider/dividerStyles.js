import _get from "lodash/get";
import { childrenExist, pxToRem } from '../../../../lib';

var beforeAndAfter = function beforeAndAfter(size, variables, colors) {
  return {
    content: '""',
    flex: 1,
    height: "".concat(size + 1, "px"),
    background: _get(colors, 'foreground', variables.dividerColor)
  };
};

var dividerStyles = {
  root: function root(_ref) {
    var props = _ref.props,
        variables = _ref.variables;
    var children = props.children,
        color = props.color,
        fitted = props.fitted,
        size = props.size,
        important = props.important,
        content = props.content;
    var colors = variables.colorScheme[color];
    return Object.assign({
      color: _get(colors, 'foreground', variables.textColor),
      display: 'flex',
      alignItems: 'center'
    }, !fitted && {
      paddingTop: variables.dividerPadding,
      paddingBottom: variables.dividerPadding
    }, important && {
      fontWeight: variables.importantFontWeight
    }, childrenExist(children) || content ? {
      textAlign: 'center',
      fontSize: pxToRem(12 + size),
      lineHeight: variables.textLineHeight,
      '::before': Object.assign({}, beforeAndAfter(size, variables, colors), {
        marginRight: pxToRem(20)
      }),
      '::after': Object.assign({}, beforeAndAfter(size, variables, colors), {
        marginLeft: pxToRem(20)
      })
    } : {
      '::before': Object.assign({}, beforeAndAfter(size, variables, colors))
    });
  }
};
export default dividerStyles;