"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var customPropTypes = _interopRequireWildcard(require("@stardust-ui/react-proptypes"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _lib = require("../../lib");

var _HeaderDescription = _interopRequireDefault(require("./HeaderDescription"));

var _types = require("../../types");

var Header =
/*#__PURE__*/
function (_UIComponent) {
  (0, _inherits2.default)(Header, _UIComponent);

  function Header() {
    (0, _classCallCheck2.default)(this, Header);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Header).apply(this, arguments));
  }

  (0, _createClass2.default)(Header, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var accessibility = _ref.accessibility,
          ElementType = _ref.ElementType,
          classes = _ref.classes,
          v = _ref.variables,
          unhandledProps = _ref.unhandledProps;
      var _this$props = this.props,
          children = _this$props.children,
          description = _this$props.description,
          content = _this$props.content;
      var hasChildren = (0, _lib.childrenExist)(children);
      var contentElement = (0, _lib.childrenExist)(children) ? children : content;
      return React.createElement(ElementType, (0, _extends2.default)({}, _lib.rtlTextContainer.getAttributes({
        forElements: [children, content],
        condition: !description
      }), accessibility.attributes.root, unhandledProps, {
        className: classes.root
      }), _lib.rtlTextContainer.createFor({
        element: contentElement,
        condition: !!description
      }), !hasChildren && _HeaderDescription.default.create(description, {
        defaultProps: function defaultProps() {
          return {
            className: Header.slotClassNames.description,
            variables: Object.assign({}, v.descriptionColor && {
              color: v.descriptionColor
            })
          };
        }
      }));
    }
  }]);
  return Header;
}(_lib.UIComponent);

(0, _defineProperty2.default)(Header, "displayName", 'Header');
(0, _defineProperty2.default)(Header, "className", 'ui-header');
(0, _defineProperty2.default)(Header, "slotClassNames", {
  description: "".concat(Header.className, "__description")
});
(0, _defineProperty2.default)(Header, "create", void 0);
(0, _defineProperty2.default)(Header, "propTypes", Object.assign({}, _lib.commonPropTypes.createCommon({
  color: true
}), {
  description: customPropTypes.itemShorthand,
  align: customPropTypes.align,
  rtlAttributes: PropTypes.func
}));
(0, _defineProperty2.default)(Header, "defaultProps", {
  as: 'h1'
});
(0, _defineProperty2.default)(Header, "Description", _HeaderDescription.default);
Header.create = (0, _lib.createShorthandFactory)({
  Component: Header,
  mappedProp: 'content'
});
/**
 * A Header organises the content by declaring a content's topic.
 *
 * @accessibility
 * Headings communicate the organization of the content on the page. Web browsers, plug-ins, and assistive technologies can use them to provide in-page navigation.
 * Nest headings by their rank (or level). The most important heading has the rank 1 (<h1>), the least important heading rank 6 (<h6>). Headings with an equal or higher rank start a new section, headings with a lower rank start new subsections that are part of the higher ranked section.
 *
 * Other considerations:
 *  - when the description property is used in header, readers will narrate both header content and description within the element. In addition to that, both will be displayed in the list of headings.
 */

var _default = (0, _types.withSafeTypeForAs)(Header);

exports.default = _default;