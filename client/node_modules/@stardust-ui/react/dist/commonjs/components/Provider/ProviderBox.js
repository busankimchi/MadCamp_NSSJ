"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var React = _interopRequireWildcard(require("react"));

var _lib = require("../../lib");

var _createComponent = _interopRequireDefault(require("../../lib/createComponent"));

var _types = require("../../types");

var ProviderBox = (0, _createComponent.default)({
  displayName: 'ProviderBox',
  className: 'ui-provider__box',
  propTypes: Object.assign({}, _lib.commonPropTypes.createCommon()),
  render: function render(config, props) {
    var ElementType = config.ElementType,
        classes = config.classes,
        unhandledProps = config.unhandledProps;
    var children = props.children;

    if (ElementType === React.Fragment) {
      // do not spread anything - React.Fragment can only have `key` and `children` props.
      return React.createElement(React.Fragment, null, children);
    }

    return React.createElement(ElementType, (0, _extends2.default)({
      className: classes.root
    }, unhandledProps), children);
  }
});
/**
 * The ProviderBox passes the CSS-in-JS renderer, theme styles and other settings to Stardust components.
 * Also, being comapred to Provider, it additionally renders an element to the DOM (`div` by default).
 */

var _default = (0, _types.withSafeTypeForAs)(ProviderBox);

exports.default = _default;