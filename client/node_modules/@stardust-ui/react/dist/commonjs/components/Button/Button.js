"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var _accessibility = require("@stardust-ui/accessibility");

var customPropTypes = _interopRequireWildcard(require("@stardust-ui/react-proptypes"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _lib = require("../../lib");

var _Icon = _interopRequireDefault(require("../Icon/Icon"));

var _Box = _interopRequireDefault(require("../Box/Box"));

var _Loader = _interopRequireDefault(require("../Loader/Loader"));

var _types = require("../../types");

var _ButtonGroup = _interopRequireDefault(require("./ButtonGroup"));

var Button =
/*#__PURE__*/
function (_UIComponent) {
  (0, _inherits2.default)(Button, _UIComponent);

  function Button() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Button);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "actionHandlers", {
      performClick: function performClick(event) {
        event.preventDefault();

        _this.handleClick(event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderIcon", function (variables, styles) {
      var _this$props = _this.props,
          icon = _this$props.icon,
          iconPosition = _this$props.iconPosition,
          content = _this$props.content;
      return _Icon.default.create(icon, {
        defaultProps: function defaultProps() {
          return {
            styles: styles.icon,
            xSpacing: !content ? 'none' : iconPosition === 'after' ? 'before' : 'after',
            variables: variables.icon
          };
        }
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderLoader", function (variables, styles) {
      var loader = _this.props.loader;
      return _Loader.default.create(loader || {}, {
        defaultProps: function defaultProps() {
          return {
            role: undefined,
            styles: styles.loader
          };
        }
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleClick", function (e) {
      var disabled = _this.props.disabled;

      if (disabled) {
        e.preventDefault();
        return;
      }

      (0, _invoke2.default)(_this.props, 'onClick', e, _this.props);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleFocus", function (e) {
      (0, _invoke2.default)(_this.props, 'onFocus', e, _this.props);
    });
    return _this;
  }

  (0, _createClass2.default)(Button, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          accessibility = _ref.accessibility,
          variables = _ref.variables,
          styles = _ref.styles,
          unhandledProps = _ref.unhandledProps;
      var _this$props2 = this.props,
          children = _this$props2.children,
          content = _this$props2.content,
          disabled = _this$props2.disabled,
          iconPosition = _this$props2.iconPosition,
          loading = _this$props2.loading;
      var hasChildren = (0, _lib.childrenExist)(children);
      return React.createElement(ElementType, (0, _extends2.default)({
        className: classes.root,
        disabled: disabled,
        onClick: this.handleClick,
        onFocus: this.handleFocus
      }, accessibility.attributes.root, _lib.rtlTextContainer.getAttributes({
        forElements: [children]
      }), unhandledProps, (0, _lib.applyAccessibilityKeyHandlers)(accessibility.keyHandlers.root, unhandledProps)), hasChildren && children, !hasChildren && loading && this.renderLoader(variables, styles), !hasChildren && iconPosition !== 'after' && this.renderIcon(variables, styles), _Box.default.create(!hasChildren && content, {
        defaultProps: function defaultProps() {
          return {
            as: 'span',
            styles: styles.content
          };
        }
      }), !hasChildren && iconPosition === 'after' && this.renderIcon(variables, styles));
    }
  }]);
  return Button;
}(_lib.UIComponent);

(0, _defineProperty2.default)(Button, "create", void 0);
(0, _defineProperty2.default)(Button, "displayName", 'Button');
(0, _defineProperty2.default)(Button, "className", 'ui-button');
(0, _defineProperty2.default)(Button, "propTypes", Object.assign({}, _lib.commonPropTypes.createCommon({
  content: 'shorthand'
}), {
  circular: PropTypes.bool,
  disabled: PropTypes.bool,
  fluid: PropTypes.bool,
  icon: customPropTypes.itemShorthandWithoutJSX,
  iconOnly: PropTypes.bool,
  iconPosition: PropTypes.oneOf(['before', 'after']),
  loader: customPropTypes.itemShorthandWithoutJSX,
  loading: PropTypes.bool,
  onClick: PropTypes.func,
  onFocus: PropTypes.func,
  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),
  text: PropTypes.bool,
  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),
  size: customPropTypes.size
}));
(0, _defineProperty2.default)(Button, "defaultProps", {
  as: 'button',
  accessibility: _accessibility.buttonBehavior,
  size: 'medium'
});
(0, _defineProperty2.default)(Button, "Group", _ButtonGroup.default);
Button.create = (0, _lib.createShorthandFactory)({
  Component: Button,
  mappedProp: 'content'
});
/**
 * A Button enables users to take an action, such as submitting a form, opening a dialog, etc.
 *
 * @accessibility
 * Implements [ARIA Button](https://www.w3.org/TR/wai-aria-practices-1.1/#button) design pattern.
 */

var _default = (0, _types.withSafeTypeForAs)(Button);

exports.default = _default;