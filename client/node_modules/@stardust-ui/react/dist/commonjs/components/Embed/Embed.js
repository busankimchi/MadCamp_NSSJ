"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var _isNil2 = _interopRequireDefault(require("lodash/isNil"));

var _accessibility = require("@stardust-ui/accessibility");

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var customPropTypes = _interopRequireWildcard(require("@stardust-ui/react-proptypes"));

var _lib = require("../../lib");

var _Icon = _interopRequireDefault(require("../Icon/Icon"));

var _Image = _interopRequireDefault(require("../Image/Image"));

var _Video = _interopRequireDefault(require("../Video/Video"));

var _Box = _interopRequireDefault(require("../Box/Box"));

var _types = require("../../types");

var _reactComponentRef = require("@stardust-ui/react-component-ref");

var Embed =
/*#__PURE__*/
function (_AutoControlledCompon) {
  (0, _inherits2.default)(Embed, _AutoControlledCompon);

  function Embed() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Embed);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Embed)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "actionHandlers", {
      performClick: function performClick(event) {
        return _this.handleClick(event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "frameRef", React.createRef());
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleClick", function (e) {
      e.stopPropagation();
      e.preventDefault();
      var iframeNil = (0, _isNil2.default)(_this.props.iframe);

      if (iframeNil || !iframeNil && !_this.state.active) {
        _this.setState({
          active: !_this.state.active
        });

        (0, _invoke2.default)(_this.props, 'onActiveChanged', e, Object.assign({}, _this.props, {
          active: !_this.state.active
        }));
      }

      (0, _invoke2.default)(_this.props, 'onClick', e, Object.assign({}, _this.props, {
        active: !_this.state.active
      }));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleFrameOverrides", function (predefinedProps) {
      return {
        onLoad: function onLoad(e) {
          (0, _invoke2.default)(predefinedProps, 'onLoad', e);

          _this.setState({
            iframeLoaded: true
          });

          _this.frameRef.current.contentWindow.focus();
        }
      };
    });
    return _this;
  }

  (0, _createClass2.default)(Embed, [{
    key: "getInitialAutoControlledState",
    value: function getInitialAutoControlledState() {
      return {
        active: false,
        iframeLoaded: false
      };
    }
  }, {
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          accessibility = _ref.accessibility,
          unhandledProps = _ref.unhandledProps,
          styles = _ref.styles,
          variables = _ref.variables;
      var _this$props = this.props,
          control = _this$props.control,
          iframe = _this$props.iframe,
          placeholder = _this$props.placeholder,
          video = _this$props.video;
      var _this$state = this.state,
          active = _this$state.active,
          iframeLoaded = _this$state.iframeLoaded;
      var placeholderElement = placeholder ? React.createElement(_Image.default, {
        src: placeholder,
        styles: styles.image,
        variables: {
          width: variables.width,
          height: variables.height
        }
      }) : null;
      var hasIframe = !(0, _isNil2.default)(iframe);
      var hasVideo = !(0, _isNil2.default)(video);
      var controlVisible = !active || hasVideo;
      var placeholderVisible = !active || hasIframe && active && !iframeLoaded;
      return React.createElement(ElementType, (0, _extends2.default)({
        className: classes.root,
        onClick: this.handleClick
      }, accessibility.attributes.root, unhandledProps, (0, _lib.applyAccessibilityKeyHandlers)(accessibility.keyHandlers.root, unhandledProps)), active && React.createElement(React.Fragment, null, _Video.default.create(video, {
        defaultProps: function defaultProps() {
          return {
            autoPlay: true,
            controls: false,
            loop: true,
            muted: true,
            poster: placeholder,
            styles: styles.video,
            variables: {
              width: variables.width,
              height: variables.height
            }
          };
        }
      }), iframe && React.createElement(_reactComponentRef.Ref, {
        innerRef: this.frameRef
      }, _Box.default.create(iframe, {
        defaultProps: function defaultProps() {
          return {
            as: 'iframe',
            styles: styles.iframe
          };
        },
        overrideProps: this.handleFrameOverrides
      }))), placeholderVisible && placeholderElement, controlVisible && _Icon.default.create(control, {
        defaultProps: function defaultProps() {
          return {
            className: Embed.slotClassNames.control,
            circular: true,
            name: active ? 'stardust-pause' : 'stardust-play',
            size: 'largest',
            styles: styles.control
          };
        }
      }));
    }
  }]);
  return Embed;
}(_lib.AutoControlledComponent);

(0, _defineProperty2.default)(Embed, "create", void 0);
(0, _defineProperty2.default)(Embed, "className", 'ui-embed');
(0, _defineProperty2.default)(Embed, "displayName", 'Embed');
(0, _defineProperty2.default)(Embed, "propTypes", Object.assign({}, _lib.commonPropTypes.createCommon({
  children: false,
  content: false
}), {
  active: PropTypes.bool,
  defaultActive: PropTypes.bool,
  control: customPropTypes.itemShorthand,
  iframe: customPropTypes.every([customPropTypes.disallow(['video']), customPropTypes.itemShorthand]),
  onActiveChanged: PropTypes.func,
  onClick: PropTypes.func,
  placeholder: PropTypes.string,
  video: customPropTypes.every([customPropTypes.disallow(['iframe']), customPropTypes.itemShorthand])
}));
(0, _defineProperty2.default)(Embed, "defaultProps", {
  as: 'span',
  accessibility: _accessibility.embedBehavior,
  control: {}
});
(0, _defineProperty2.default)(Embed, "autoControlledProps", ['active']);
(0, _defineProperty2.default)(Embed, "slotClassNames", {
  control: "".concat(Embed.className, "__control")
});
Embed.create = (0, _lib.createShorthandFactory)({
  Component: Embed
});
/**
 * An Embed displays content from external websites, like a post from external social network.
 *
 * @accessibility
 * A `placeholder` slot represents an [`Image`](/components/image/definition) component, please follow recommendations from its
 * accessibility section.
 */

var _default = (0, _types.withSafeTypeForAs)(Embed);

exports.default = _default;