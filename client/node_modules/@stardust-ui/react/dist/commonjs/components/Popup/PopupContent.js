"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _keys2 = _interopRequireDefault(require("lodash/keys"));

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var _reactBindings = require("@stardust-ui/react-bindings");

var _classnames = _interopRequireDefault(require("classnames"));

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var customPropTypes = _interopRequireWildcard(require("@stardust-ui/react-proptypes"));

var _lib = require("../../lib");

var _types = require("../../types");

var PopupContent =
/*#__PURE__*/
function (_UIComponent) {
  (0, _inherits2.default)(PopupContent, _UIComponent);

  function PopupContent() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, PopupContent);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PopupContent)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleMouseEnter", function (e) {
      (0, _invoke2.default)(_this.props, 'onMouseEnter', e, _this.props);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleMouseLeave", function (e) {
      (0, _invoke2.default)(_this.props, 'onMouseLeave', e, _this.props);
    });
    return _this;
  }

  (0, _createClass2.default)(PopupContent, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var accessibility = _ref.accessibility,
          ElementType = _ref.ElementType,
          classes = _ref.classes,
          unhandledProps = _ref.unhandledProps,
          styles = _ref.styles;
      var _this$props = this.props,
          children = _this$props.children,
          content = _this$props.content,
          pointing = _this$props.pointing,
          pointerRef = _this$props.pointerRef,
          trapFocus = _this$props.trapFocus,
          autoFocus = _this$props.autoFocus;
      var popupContentProps = Object.assign({
        className: classes.root
      }, _lib.rtlTextContainer.getAttributes({
        forElements: [children, content]
      }), accessibility.attributes.root, unhandledProps, {
        onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave
      });
      var popupContent = React.createElement(React.Fragment, null, pointing && React.createElement("div", {
        className: classes.pointer,
        ref: pointerRef
      }), React.createElement("div", {
        className: (0, _classnames.default)(PopupContent.slotClassNames.content, classes.content)
      }, (0, _lib.childrenExist)(children) ? children : content));

      if (trapFocus) {
        var focusTrapZoneProps = Object.assign({}, popupContentProps, (0, _keys2.default)(trapFocus).length && trapFocus, {
          as: ElementType
        });
        return React.createElement(_reactBindings.FocusTrapZone, focusTrapZoneProps, popupContent);
      }

      if (autoFocus) {
        var autoFocusZoneProps = Object.assign({}, popupContentProps, (0, _keys2.default)(autoFocus).length && autoFocus, {
          as: ElementType
        });
        return React.createElement(_reactBindings.AutoFocusZone, autoFocusZoneProps, popupContent);
      }

      return React.createElement(ElementType, popupContentProps, popupContent);
    }
  }]);
  return PopupContent;
}(_lib.UIComponent);

(0, _defineProperty2.default)(PopupContent, "create", void 0);
(0, _defineProperty2.default)(PopupContent, "displayName", 'PopupContent');
(0, _defineProperty2.default)(PopupContent, "className", 'ui-popup__content');
(0, _defineProperty2.default)(PopupContent, "slotClassNames", void 0);
(0, _defineProperty2.default)(PopupContent, "propTypes", Object.assign({}, _lib.commonPropTypes.createCommon(), {
  placement: PropTypes.string,
  pointing: PropTypes.bool,
  onMouseEnter: PropTypes.func,
  onMouseLeave: PropTypes.func,
  pointerRef: customPropTypes.ref,
  trapFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),
  autoFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object])
}));
PopupContent.slotClassNames = {
  content: "".concat(PopupContent.className, "__content")
};
PopupContent.create = (0, _lib.createShorthandFactory)({
  Component: PopupContent,
  mappedProp: 'content'
});
/**
 * A PopupContent displays the content of a Popup component.
 */

var _default = (0, _types.withSafeTypeForAs)(PopupContent);

exports.default = _default;