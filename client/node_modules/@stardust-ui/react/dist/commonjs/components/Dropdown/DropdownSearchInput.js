"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var customPropTypes = _interopRequireWildcard(require("@stardust-ui/react-proptypes"));

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _lib = require("../../lib");

var _types = require("../../types");

var _Input = _interopRequireDefault(require("../Input/Input"));

var DropdownSearchInput =
/*#__PURE__*/
function (_UIComponent) {
  (0, _inherits2.default)(DropdownSearchInput, _UIComponent);

  function DropdownSearchInput() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, DropdownSearchInput);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(DropdownSearchInput)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleFocus", function (e) {
      (0, _invoke2.default)(_this.props, 'onFocus', e, _this.props);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleInputKeyDown", function (e) {
      (0, _invoke2.default)(_this.props, 'onInputKeyDown', e, _this.props);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleInputBlur", function (e) {
      (0, _invoke2.default)(_this.props, 'onInputBlur', e, _this.props);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleKeyUp", function (e) {
      (0, _invoke2.default)(_this.props, 'onKeyUp', e, _this.props);
    });
    return _this;
  }

  (0, _createClass2.default)(DropdownSearchInput, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var unhandledProps = _ref.unhandledProps,
          styles = _ref.styles;
      var _this$props = this.props,
          accessibilityComboboxProps = _this$props.accessibilityComboboxProps,
          accessibilityInputProps = _this$props.accessibilityInputProps,
          inputRef = _this$props.inputRef,
          placeholder = _this$props.placeholder;
      return React.createElement(_Input.default, (0, _extends2.default)({
        inputRef: inputRef,
        onFocus: this.handleFocus,
        onKeyUp: this.handleKeyUp
      }, unhandledProps, {
        wrapper: Object.assign({
          className: DropdownSearchInput.slotClassNames.wrapper,
          styles: styles.root
        }, accessibilityComboboxProps, unhandledProps.wrapper),
        input: Object.assign({
          type: 'text',
          className: DropdownSearchInput.slotClassNames.input,
          styles: styles.input,
          placeholder: placeholder,
          onBlur: this.handleInputBlur,
          onKeyDown: this.handleInputKeyDown
        }, accessibilityInputProps, unhandledProps.input)
      }));
    }
  }]);
  return DropdownSearchInput;
}(_lib.UIComponent);

(0, _defineProperty2.default)(DropdownSearchInput, "displayName", 'DropdownSearchInput');
(0, _defineProperty2.default)(DropdownSearchInput, "create", void 0);
(0, _defineProperty2.default)(DropdownSearchInput, "slotClassNames", void 0);
(0, _defineProperty2.default)(DropdownSearchInput, "className", 'ui-dropdown__searchinput');
(0, _defineProperty2.default)(DropdownSearchInput, "propTypes", Object.assign({}, _lib.commonPropTypes.createCommon({
  accessibility: false,
  children: false,
  content: false
}), {
  accessibilityInputProps: PropTypes.object,
  accessibilityComboboxProps: PropTypes.object,
  inline: PropTypes.bool,
  inputRef: customPropTypes.ref,
  onFocus: PropTypes.func,
  onInputBlur: PropTypes.func,
  onInputKeyDown: PropTypes.func,
  onKeyUp: PropTypes.func,
  placeholder: PropTypes.string
}));
DropdownSearchInput.slotClassNames = {
  input: "".concat(DropdownSearchInput.className, "__input"),
  wrapper: "".concat(DropdownSearchInput.className, "__wrapper")
};
DropdownSearchInput.create = (0, _lib.createShorthandFactory)({
  Component: DropdownSearchInput
});
/**
 * A DropdownSearchInput represents item of 'search' Dropdown.
 * Used to display the search input field.
 */

var _default = (0, _types.withSafeTypeForAs)(DropdownSearchInput);

exports.default = _default;