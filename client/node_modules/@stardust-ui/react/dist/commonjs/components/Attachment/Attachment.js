"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var _isNil2 = _interopRequireDefault(require("lodash/isNil"));

var _accessibility = require("@stardust-ui/accessibility");

var customPropTypes = _interopRequireWildcard(require("@stardust-ui/react-proptypes"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _types = require("../../types");

var _lib = require("../../lib");

var _Icon = _interopRequireDefault(require("../Icon/Icon"));

var _Button = _interopRequireDefault(require("../Button/Button"));

var _Text = _interopRequireDefault(require("../Text/Text"));

var Attachment =
/*#__PURE__*/
function (_UIComponent) {
  (0, _inherits2.default)(Attachment, _UIComponent);

  function Attachment() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Attachment);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Attachment)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "actionHandlers", {
      performClick: function performClick(event) {
        return _this.performClick(event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "performClick", function (e) {
      if (e.currentTarget === e.target) {
        e.stopPropagation();

        _this.handleClick(e);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleClick", function (e) {
      var disabled = _this.props.disabled;

      if (disabled) {
        e.preventDefault();
        return;
      }

      (0, _invoke2.default)(_this.props, 'onClick', e, _this.props);
    });
    return _this;
  }

  (0, _createClass2.default)(Attachment, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          unhandledProps = _ref.unhandledProps,
          styles = _ref.styles,
          variables = _ref.variables,
          accessibility = _ref.accessibility;
      var _this$props = this.props,
          header = _this$props.header,
          description = _this$props.description,
          icon = _this$props.icon,
          action = _this$props.action,
          progress = _this$props.progress;
      return React.createElement(ElementType, (0, _extends2.default)({
        className: classes.root,
        onClick: this.handleClick
      }, accessibility.attributes.root, unhandledProps, (0, _lib.applyAccessibilityKeyHandlers)(accessibility.keyHandlers.root, unhandledProps)), icon && _Icon.default.create(icon, {
        defaultProps: function defaultProps() {
          return {
            size: 'larger',
            styles: styles.icon
          };
        }
      }), (header || description) && React.createElement("div", {
        className: classes.content
      }, _Text.default.create(header, {
        defaultProps: function defaultProps() {
          return {
            styles: styles.header
          };
        }
      }), _Text.default.create(description, {
        defaultProps: function defaultProps() {
          return {
            styles: styles.description
          };
        }
      })), action && _Button.default.create(action, {
        defaultProps: function defaultProps() {
          return {
            iconOnly: true,
            text: true,
            styles: styles.action,
            className: Attachment.slotClassNames.action
          };
        }
      }), !(0, _isNil2.default)(progress) && React.createElement("div", {
        className: classes.progress
      }));
    }
  }]);
  return Attachment;
}(_lib.UIComponent);

(0, _defineProperty2.default)(Attachment, "create", void 0);
(0, _defineProperty2.default)(Attachment, "className", 'ui-attachment');
(0, _defineProperty2.default)(Attachment, "displayName", 'Attachment');
(0, _defineProperty2.default)(Attachment, "slotClassNames", void 0);
(0, _defineProperty2.default)(Attachment, "propTypes", Object.assign({}, _lib.commonPropTypes.createCommon({
  content: false
}), {
  action: customPropTypes.itemShorthand,
  actionable: PropTypes.bool,
  description: customPropTypes.itemShorthand,
  header: customPropTypes.itemShorthand,
  icon: customPropTypes.itemShorthandWithoutJSX,
  progress: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
}));
(0, _defineProperty2.default)(Attachment, "defaultProps", {
  accessibility: _accessibility.attachmentBehavior
});
Attachment.create = (0, _lib.createShorthandFactory)({
  Component: Attachment,
  mappedProp: 'header'
});
Attachment.slotClassNames = {
  action: "".concat(Attachment.className, "__action")
  /**
   * An Attachment represents a file or media attachment, which may contain some metadata or actions.
   */

};

var _default = (0, _types.withSafeTypeForAs)(Attachment);

exports.default = _default;