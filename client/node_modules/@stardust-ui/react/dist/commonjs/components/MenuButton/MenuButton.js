"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _accessibility2 = require("@stardust-ui/accessibility");

var _reactComponentRef = require("@stardust-ui/react-component-ref");

var customPropTypes = _interopRequireWildcard(require("@stardust-ui/react-proptypes"));

var _lib = require("../../lib");

var _factories = require("../../lib/factories");

var _Popup = _interopRequireDefault(require("../Popup/Popup"));

var _Menu = _interopRequireDefault(require("../Menu/Menu"));

var _focusUtils = require("./focusUtils");

var _positioner = require("../../lib/positioner");

/**
 * A MenuButton displays a menu connected to trigger element.
 * @accessibility
 */
var MenuButton =
/*#__PURE__*/
function (_AutoControlledCompon) {
  (0, _inherits2.default)(MenuButton, _AutoControlledCompon);

  function MenuButton() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, MenuButton);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MenuButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "triggerRef", React.createRef());
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "menuRef", React.createRef());
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "actionHandlers", {
      closeMenu: function closeMenu() {
        return _this.closeMenu();
      },
      openAndFocusFirst: function openAndFocusFirst(e) {
        return _this.openAndFocus(e, 'first');
      },
      openAndFocusLast: function openAndFocusLast(e) {
        return _this.openAndFocus(e, 'last');
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleOpenChange", function (e, _ref) {
      var open = _ref.open;
      (0, _invoke2.default)(_this.props, 'onOpenChange', e, Object.assign({}, _this.props, {
        open: open
      }));

      _this.setState({
        open: open
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleMenuOverrides", function (predefinedProps) {
      return {
        onItemClick: function onItemClick(e, itemProps) {
          (0, _invoke2.default)(predefinedProps, 'onItemClick', e, itemProps);
          (0, _invoke2.default)(_this.props, 'onMenuItemClick', e, itemProps);

          if (!itemProps || !itemProps.menu) {
            // do not close if clicked on item with submenu
            _this.setState({
              open: false
            });
          }
        }
      };
    });
    return _this;
  }

  (0, _createClass2.default)(MenuButton, [{
    key: "closeMenu",
    value: function closeMenu() {
      this.setState({
        open: false
      });
    }
  }, {
    key: "openAndFocus",
    value: function openAndFocus(e, which) {
      var _this2 = this;

      var renderCallback = function renderCallback() {
        return (0, _focusUtils.focusMenuItem)(_this2.menuRef.current, which);
      };

      this.setState({
        open: true
      }, renderCallback);
      e.preventDefault();
    }
  }, {
    key: "renderComponent",
    value: function renderComponent(_ref2) {
      var ElementType = _ref2.ElementType,
          classes = _ref2.classes,
          unhandledProps = _ref2.unhandledProps,
          _accessibility = _ref2.accessibility,
          styles = _ref2.styles;
      var _this$props = this.props,
          contextMenu = _this$props.contextMenu,
          menu = _this$props.menu,
          accessibilityProp = _this$props.accessibility,
          align = _this$props.align,
          className = _this$props.className,
          defaultOpen = _this$props.defaultOpen,
          mountDocument = _this$props.mountDocument,
          mountNode = _this$props.mountNode,
          mouseLeaveDelay = _this$props.mouseLeaveDelay,
          offset = _this$props.offset,
          on = _this$props.on,
          onOpenChange = _this$props.onOpenChange,
          open = _this$props.open,
          pointing = _this$props.pointing,
          position = _this$props.position,
          tabbableTrigger = _this$props.tabbableTrigger,
          stylesProp = _this$props.styles,
          target = _this$props.target,
          trigger = _this$props.trigger,
          unstable_pinned = _this$props.unstable_pinned,
          variables = _this$props.variables;
      var popupProps = {
        accessibility: accessibilityProp,
        align: align,
        className: className,
        defaultOpen: defaultOpen,
        mountDocument: mountDocument,
        mountNode: mountNode,
        mouseLeaveDelay: mouseLeaveDelay,
        offset: offset,
        on: on,
        onOpenChange: onOpenChange,
        open: open,
        pointing: pointing,
        position: position,
        tabbableTrigger: tabbableTrigger,
        styles: stylesProp,
        target: target,
        trigger: trigger,
        unstable_pinned: unstable_pinned,
        variables: variables
      };

      var content = _Menu.default.create(menu, {
        defaultProps: function defaultProps() {
          return Object.assign({}, _accessibility.attributes.menu, {
            vertical: true
          });
        },
        overrideProps: this.handleMenuOverrides
      });

      var overrideProps = Object.assign({
        accessibility: function accessibility() {
          return _accessibility;
        },
        open: this.state.open,
        onOpenChange: this.handleOpenChange,
        content: {
          styles: styles.popupContent,
          content: content && React.createElement(_reactComponentRef.Ref, {
            innerRef: this.menuRef
          }, content)
        },
        children: undefined
      }, contextMenu ? {
        on: 'context',
        trapFocus: true,
        tabbableTrigger: false
      } : {
        inline: true,
        autoFocus: true
      });

      var popup = _Popup.default.create(popupProps, {
        overrideProps: overrideProps
      });

      if (contextMenu) {
        return popup;
      }

      return React.createElement(ElementType, (0, _extends2.default)({
        className: classes.root
      }, _accessibility.attributes.root, unhandledProps, (0, _lib.applyAccessibilityKeyHandlers)(_accessibility.keyHandlers.root, unhandledProps)), React.createElement(_reactComponentRef.Ref, {
        innerRef: this.triggerRef
      }, popup));
    }
  }], [{
    key: "getAutoControlledStateFromProps",
    value: function getAutoControlledStateFromProps(props, state) {
      return {
        menuId: (0, _lib.getOrGenerateIdFromShorthand)('menubutton-menu-', props.menu, state.menuId),
        triggerId: (0, _lib.getOrGenerateIdFromShorthand)('menubutton-trigger-', props.trigger, state.triggerId)
      };
    }
  }]);
  return MenuButton;
}(_lib.AutoControlledComponent);

exports.default = MenuButton;
(0, _defineProperty2.default)(MenuButton, "displayName", 'MenuButton');
(0, _defineProperty2.default)(MenuButton, "className", 'ui-menubutton');
(0, _defineProperty2.default)(MenuButton, "create", void 0);
(0, _defineProperty2.default)(MenuButton, "slotClassNames", {
  menu: "".concat(MenuButton.className, "__menu")
});
(0, _defineProperty2.default)(MenuButton, "propTypes", Object.assign({}, _lib.commonPropTypes.createCommon({
  animated: false,
  as: true,
  content: false
}), {
  align: PropTypes.oneOf(_positioner.ALIGNMENTS),
  defaultOpen: PropTypes.bool,
  mountDocument: PropTypes.object,
  mountNode: customPropTypes.domNode,
  mouseLeaveDelay: PropTypes.number,
  offset: PropTypes.string,
  on: PropTypes.oneOfType([PropTypes.oneOf(['hover', 'click', 'focus', 'context']), PropTypes.arrayOf(PropTypes.oneOf(['click', 'focus', 'context'])), PropTypes.arrayOf(PropTypes.oneOf(['hover', 'focus', 'context']))]),
  open: PropTypes.bool,
  onMenuItemClick: PropTypes.func,
  onOpenChange: PropTypes.func,
  position: PropTypes.oneOf(_positioner.POSITIONS),
  target: PropTypes.any,
  trigger: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.any]),
  tabbableTrigger: PropTypes.bool,
  unstable_pinned: PropTypes.bool,
  menu: PropTypes.oneOfType([customPropTypes.itemShorthandWithoutJSX, PropTypes.arrayOf(customPropTypes.itemShorthandWithoutJSX)]),
  contextMenu: PropTypes.bool
}));
(0, _defineProperty2.default)(MenuButton, "defaultProps", {
  accessibility: _accessibility2.menuButtonBehavior,
  align: 'start',
  position: 'below'
});
(0, _defineProperty2.default)(MenuButton, "autoControlledProps", ['open']);
MenuButton.create = (0, _factories.createShorthandFactory)({
  Component: MenuButton,
  mappedProp: 'menu'
});