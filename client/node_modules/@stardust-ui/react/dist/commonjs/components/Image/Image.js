"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _accessibility = require("@stardust-ui/accessibility");

var PropTypes = _interopRequireWildcard(require("prop-types"));

var React = _interopRequireWildcard(require("react"));

var _lib = require("../../lib");

var _types = require("../../types");

var Image =
/*#__PURE__*/
function (_UIComponent) {
  (0, _inherits2.default)(Image, _UIComponent);

  function Image() {
    (0, _classCallCheck2.default)(this, Image);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Image).apply(this, arguments));
  }

  (0, _createClass2.default)(Image, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          accessibility = _ref.accessibility,
          unhandledProps = _ref.unhandledProps;
      return React.createElement(ElementType, (0, _extends2.default)({}, accessibility.attributes.root, unhandledProps, {
        className: classes.root
      }));
    }
  }]);
  return Image;
}(_lib.UIComponent);

(0, _defineProperty2.default)(Image, "create", void 0);
(0, _defineProperty2.default)(Image, "className", 'ui-image');
(0, _defineProperty2.default)(Image, "displayName", 'Image');
(0, _defineProperty2.default)(Image, "propTypes", Object.assign({}, _lib.commonPropTypes.createCommon({
  children: false,
  content: false
}), {
  avatar: PropTypes.bool,
  circular: PropTypes.bool,
  fluid: PropTypes.bool
}));
(0, _defineProperty2.default)(Image, "defaultProps", {
  as: 'img',
  accessibility: _accessibility.imageBehavior
});
Image.create = (0, _lib.createShorthandFactory)({
  Component: Image,
  mappedProp: 'src',
  allowsJSX: false
});
/**
 * An Image is a graphic representation of something.
 *
 * @accessibility
 * If image should be visible to screen readers, textual representation needs to be provided in 'alt' property.
 *
 * Other considerations:
 *  - when alt property is empty, then Narrator in scan mode navigates to image and narrates it as empty paragraph.
 *  - when image has role='presentation' then screen readers navigate to the element in scan/virtual mode. To avoid this, the attribute "aria-hidden='true'" is applied by the default image behavior.
 *  - when alt property is used in combination with aria-label, arialabbeledby or title, additional screen readers verification is needed as each screen reader handles this combination differently.
 */

var _default = (0, _types.withSafeTypeForAs)(Image);

exports.default = _default;