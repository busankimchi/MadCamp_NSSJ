"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _pick2 = _interopRequireDefault(require("lodash/pick"));

var _map2 = _interopRequireDefault(require("lodash/map"));

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var _accessibility = require("@stardust-ui/accessibility");

var customPropTypes = _interopRequireWildcard(require("@stardust-ui/react-proptypes"));

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _lib = require("../../lib");

var _ListItem = _interopRequireDefault(require("./ListItem"));

var _types = require("../../types");

var List =
/*#__PURE__*/
function (_AutoControlledCompon) {
  (0, _inherits2.default)(List, _AutoControlledCompon);

  function List() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, List);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(List)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleItemOverrides", function (predefinedProps) {
      var selectable = _this.props.selectable;
      return {
        onClick: function onClick(e, itemProps) {
          (0, _invoke2.default)(predefinedProps, 'onClick', e, itemProps);

          if (selectable) {
            _this.setState({
              selectedIndex: itemProps.index
            });

            (0, _invoke2.default)(_this.props, 'onSelectedIndexChange', e, Object.assign({}, _this.props, {
              selectedIndex: itemProps.index
            }));
          }
        }
      };
    });
    return _this;
  }

  (0, _createClass2.default)(List, [{
    key: "getInitialAutoControlledState",
    value: function getInitialAutoControlledState() {
      return {
        selectedIndex: -1
      };
    }
  }, {
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          accessibility = _ref.accessibility,
          unhandledProps = _ref.unhandledProps;
      var children = this.props.children;
      return React.createElement(ElementType, (0, _extends2.default)({}, accessibility.attributes.root, _lib.rtlTextContainer.getAttributes({
        forElements: [children]
      }), unhandledProps, (0, _lib.applyAccessibilityKeyHandlers)(accessibility.keyHandlers.root, unhandledProps), {
        className: classes.root
      }), (0, _lib.childrenExist)(children) ? children : this.renderItems());
    }
  }, {
    key: "renderItems",
    value: function renderItems() {
      var _this2 = this;

      var _this$props = this.props,
          items = _this$props.items,
          selectable = _this$props.selectable;
      var selectedIndex = this.state.selectedIndex;
      return (0, _map2.default)(items, function (item, index) {
        var maybeSelectableItemProps = {};

        if (selectable) {
          maybeSelectableItemProps.selected = index === selectedIndex;
        }

        var itemProps = function itemProps() {
          return Object.assign({
            className: List.slotClassNames.item
          }, (0, _pick2.default)(_this2.props, List.itemProps), maybeSelectableItemProps, {
            index: index
          });
        };

        return _ListItem.default.create(item, {
          defaultProps: itemProps,
          overrideProps: _this2.handleItemOverrides
        });
      });
    }
  }]);
  return List;
}(_lib.AutoControlledComponent);
/**
 * A List displays a group of related sequential items.
 *
 * @accessibility
 * List may follow one of the following accessibility semantics:
 * - Static non-navigable list. Implements [ARIA list](https://www.w3.org/TR/wai-aria-1.1/#list) role.
 * - Selectable list: allows the user to select item from a list of choices. Implements [ARIA Listbox](https://www.w3.org/TR/wai-aria-practices-1.1/#Listbox) design pattern.
 */


(0, _defineProperty2.default)(List, "displayName", 'List');
(0, _defineProperty2.default)(List, "className", 'ui-list');
(0, _defineProperty2.default)(List, "slotClassNames", {
  item: "".concat(List.className, "__item")
});
(0, _defineProperty2.default)(List, "propTypes", Object.assign({}, _lib.commonPropTypes.createCommon({
  content: false
}), {
  debug: PropTypes.bool,
  items: customPropTypes.collectionShorthand,
  selectable: customPropTypes.every([customPropTypes.disallow(['navigable']), PropTypes.bool]),
  navigable: customPropTypes.every([customPropTypes.disallow(['selectable']), PropTypes.bool]),
  truncateContent: PropTypes.bool,
  truncateHeader: PropTypes.bool,
  selectedIndex: PropTypes.number,
  defaultSelectedIndex: PropTypes.number,
  onSelectedIndexChange: PropTypes.func,
  horizontal: PropTypes.bool
}));
(0, _defineProperty2.default)(List, "defaultProps", {
  as: 'ul',
  accessibility: _accessibility.listBehavior
});
(0, _defineProperty2.default)(List, "autoControlledProps", ['selectedIndex']);
(0, _defineProperty2.default)(List, "Item", _ListItem.default);
(0, _defineProperty2.default)(List, "itemProps", ['debug', 'selectable', 'navigable', 'truncateContent', 'truncateHeader', 'variables']);

var _default = (0, _types.withSafeTypeForAs)(List);

exports.default = _default;