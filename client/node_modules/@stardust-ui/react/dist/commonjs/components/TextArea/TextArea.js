"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var _accessibility = require("@stardust-ui/accessibility");

var _types = require("../../types");

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _lib = require("../../lib");

var TextArea =
/*#__PURE__*/
function (_AutoControlledCompon) {
  (0, _inherits2.default)(TextArea, _AutoControlledCompon);

  function TextArea() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, TextArea);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TextArea)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleChange", function (e) {
      var value = (0, _get2.default)(e, 'target.value');
      (0, _invoke2.default)(_this.props, 'onChange', e, Object.assign({}, _this.props, {
        value: value
      }));

      _this.setState({
        value: value
      });
    });
    return _this;
  }

  (0, _createClass2.default)(TextArea, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          accessibility = _ref.accessibility,
          variables = _ref.variables,
          styles = _ref.styles,
          unhandledProps = _ref.unhandledProps;
      var disabled = this.props.disabled;
      var _this$state$value = this.state.value,
          value = _this$state$value === void 0 ? '' : _this$state$value;
      return React.createElement(ElementType, (0, _extends2.default)({
        value: value,
        className: classes.root,
        onChange: this.handleChange,
        disabled: disabled
      }, accessibility.attributes.root, unhandledProps, (0, _lib.applyAccessibilityKeyHandlers)(accessibility.keyHandlers.root, unhandledProps)));
    }
  }]);
  return TextArea;
}(_lib.AutoControlledComponent);
/**
 * A TextArea is a multi-line plan-text editing control.
 *
 * @accessibility
 * For good screen reader experience set `aria-label` or `aria-labelledby` attribute for textarea.
 * When using maxlength attribute, provide the information about max length in label for screen reader.
 * @accessibilityIssues
 * [NVDA - No announcement of maxlength](https://github.com/nvaccess/nvda/issues/7910)
 * [JAWS - textarea - no announcement of maxlength](https://github.com/FreedomScientific/VFO-standards-support/issues/300)
 */


(0, _defineProperty2.default)(TextArea, "className", 'ui-textarea');
(0, _defineProperty2.default)(TextArea, "displayName", 'TextArea');
(0, _defineProperty2.default)(TextArea, "propTypes", Object.assign({}, _lib.commonPropTypes.createCommon({
  content: false
}), {
  defaultValue: PropTypes.string,
  onChange: PropTypes.func,
  value: PropTypes.string,
  disabled: PropTypes.bool
}));
(0, _defineProperty2.default)(TextArea, "defaultProps", {
  as: 'textarea',
  accessibility: _accessibility.textAreaBehavior
});
(0, _defineProperty2.default)(TextArea, "autoControlledProps", ['value']);

var _default = (0, _types.withSafeTypeForAs)(TextArea);

exports.default = _default;