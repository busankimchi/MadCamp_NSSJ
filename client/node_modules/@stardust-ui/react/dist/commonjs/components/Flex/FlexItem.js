"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _isNil2 = _interopRequireDefault(require("lodash/isNil"));

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _lib = require("../../lib");

var _mergeThemes = require("../../lib/mergeThemes");

/**
 * A FlexItem is a layout component that customizes alignment of Flex child.
 */
var FlexItem =
/*#__PURE__*/
function (_UIComponent) {
  (0, _inherits2.default)(FlexItem, _UIComponent);

  function FlexItem() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, FlexItem);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(FlexItem)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "displayName", void 0);
    return _this;
  }

  (0, _createClass2.default)(FlexItem, [{
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var styles = _ref.styles,
          classes = _ref.classes;
      var children = this.props.children; // pass calculated bits using Render Props pattern

      if (typeof children === 'function') {
        return children({
          styles: styles.root,
          classes: classes.root
        });
      }

      if ((0, _isNil2.default)(children)) return children;
      return applyStyles(React.Children.only(children), styles, classes);
    }
  }]);
  return FlexItem;
}(_lib.UIComponent);

(0, _defineProperty2.default)(FlexItem, "className", 'ui-flex__item');
(0, _defineProperty2.default)(FlexItem, "displayName", 'FlexItem');
(0, _defineProperty2.default)(FlexItem, "propTypes", Object.assign({}, _lib.commonPropTypes.createCommon({
  children: false,
  accessibility: false,
  content: false
}), {
  children: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),
  align: PropTypes.oneOf(['auto', 'start', 'end', 'center', 'baseline', 'stretch']),
  size: PropTypes.oneOf(['size.half', 'size.quarter', 'size.small', 'size.medium', 'size.large']),
  stretch: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),
  shrink: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),
  push: PropTypes.bool,

  /**
   * Will be automatically set by parent Flex component
   */
  flexDirection: PropTypes.oneOf(['row', 'column'])
}));
(0, _defineProperty2.default)(FlexItem, "create", void 0);
(0, _defineProperty2.default)(FlexItem, "__isFlexItem", true);
var _default = FlexItem;
exports.default = _default;

var applyStyles = function applyStyles(element, styles, classes) {
  if (!styles) {
    return element;
  } // if element is DOM element


  if (typeof element.type === 'string') {
    return React.cloneElement(element, {
      className: (0, _classnames.default)(element.props.className, classes.root)
    });
  } // assuming element is Stardust element


  return React.cloneElement(element, {
    styles: (0, _mergeThemes.mergeStyles)(styles.root || {}, element.props.styles)
  });
};