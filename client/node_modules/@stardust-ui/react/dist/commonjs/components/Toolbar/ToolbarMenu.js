"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var _map2 = _interopRequireDefault(require("lodash/map"));

var _invoke2 = _interopRequireDefault(require("lodash/invoke"));

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _accessibility = require("@stardust-ui/accessibility");

var customPropTypes = _interopRequireWildcard(require("@stardust-ui/react-proptypes"));

var _lib = require("../../lib");

var _mergeThemes = require("../../lib/mergeThemes");

var _types = require("../../types");

var _ToolbarMenuRadioGroup = _interopRequireDefault(require("./ToolbarMenuRadioGroup"));

var _ToolbarMenuDivider = _interopRequireDefault(require("./ToolbarMenuDivider"));

var _ToolbarMenuItem = _interopRequireDefault(require("./ToolbarMenuItem"));

var ToolbarMenu =
/*#__PURE__*/
function (_UIComponent) {
  (0, _inherits2.default)(ToolbarMenu, _UIComponent);

  function ToolbarMenu() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, ToolbarMenu);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ToolbarMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "actionHandlers", {
      performClick: function performClick(e) {
        (0, _invoke2.default)(_this.props, 'onClick', e, _this.props);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleItemOverrides", function (variables) {
      return function (predefinedProps) {
        return {
          onClick: function onClick(e, itemProps) {
            (0, _invoke2.default)(predefinedProps, 'onClick', e, itemProps);
            (0, _invoke2.default)(_this.props, 'onItemClick', e, Object.assign({}, itemProps, {
              menuOpen: !!itemProps.menu
            }));
          },
          variables: (0, _mergeThemes.mergeComponentVariables)(variables, predefinedProps.variables)
        };
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleDividerOverrides", function (variables) {
      return function (predefinedProps) {
        return {
          variables: (0, _mergeThemes.mergeComponentVariables)(variables, predefinedProps.variables)
        };
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleRadioGroupOverrides", function (variables) {
      return function (predefinedProps) {
        return {
          onItemClick: function onItemClick(e, itemProps) {
            (0, _invoke2.default)(predefinedProps, 'onItemClick', e, itemProps);
            (0, _invoke2.default)(_this.props, 'onItemClick', e, itemProps);
          },
          variables: (0, _mergeThemes.mergeComponentVariables)(variables, predefinedProps.variables)
        };
      };
    });
    return _this;
  }

  (0, _createClass2.default)(ToolbarMenu, [{
    key: "renderItems",
    value: function renderItems(items, variables) {
      var _this$props = this.props,
          submenuIndicator = _this$props.submenuIndicator,
          submenu = _this$props.submenu;
      var itemOverridesFn = this.handleItemOverrides(variables);
      var dividerOverridesFn = this.handleDividerOverrides(variables);
      var radioGroupOverrides = this.handleRadioGroupOverrides(variables);
      return (0, _map2.default)(items, function (item) {
        var kind = (0, _get2.default)(item, 'kind', 'item');

        switch (kind) {
          case 'divider':
            return _ToolbarMenuDivider.default.create(item, {
              overrideProps: dividerOverridesFn
            });

          case 'group':
            return _ToolbarMenuRadioGroup.default.create(item, {
              overrideProps: radioGroupOverrides
            });

          case 'toggle':
            return _ToolbarMenuItem.default.create(item, {
              defaultProps: function defaultProps() {
                return {
                  accessibility: _accessibility.toolbarMenuItemCheckboxBehavior
                };
              },
              overrideProps: itemOverridesFn
            });

          default:
            return _ToolbarMenuItem.default.create(item, {
              defaultProps: function defaultProps() {
                return {
                  submenuIndicator: submenuIndicator,
                  inSubmenu: submenu
                };
              },
              overrideProps: itemOverridesFn
            });
        }
      });
    }
  }, {
    key: "renderComponent",
    value: function renderComponent(_ref) {
      var ElementType = _ref.ElementType,
          classes = _ref.classes,
          accessibility = _ref.accessibility,
          variables = _ref.variables,
          unhandledProps = _ref.unhandledProps;
      var _this$props2 = this.props,
          children = _this$props2.children,
          items = _this$props2.items;
      return React.createElement(ElementType, (0, _extends2.default)({
        className: classes.root
      }, accessibility.attributes.root, unhandledProps, (0, _lib.applyAccessibilityKeyHandlers)(accessibility.keyHandlers.root, unhandledProps)), (0, _lib.childrenExist)(children) ? children : this.renderItems(items, variables));
    }
  }]);
  return ToolbarMenu;
}(_lib.UIComponent);

(0, _defineProperty2.default)(ToolbarMenu, "displayName", 'ToolbarMenu');
(0, _defineProperty2.default)(ToolbarMenu, "className", 'ui-toolbar__menu');
(0, _defineProperty2.default)(ToolbarMenu, "create", void 0);
(0, _defineProperty2.default)(ToolbarMenu, "propTypes", Object.assign({}, _lib.commonPropTypes.createCommon(), {
  items: customPropTypes.collectionShorthandWithKindProp(['divider', 'item']),
  onItemClick: PropTypes.func,
  submenu: PropTypes.bool,
  submenuIndicator: customPropTypes.itemShorthandWithoutJSX
}));
(0, _defineProperty2.default)(ToolbarMenu, "defaultProps", {
  accessibility: _accessibility.toolbarMenuBehavior,
  as: 'ul'
});
ToolbarMenu.create = (0, _lib.createShorthandFactory)({
  Component: ToolbarMenu,
  mappedArrayProp: 'items'
});
/**
 * A ToolbarMenu creates a pop-up menu attached to a ToolbarItem.
 *
 * @accessibility
 * Implements pop-up menu (submenu) behavior of [ARIA Menu](https://www.w3.org/TR/wai-aria-practices-1.1/#menu) design pattern.
 */

var _default = (0, _types.withSafeTypeForAs)(ToolbarMenu);

exports.default = _default;