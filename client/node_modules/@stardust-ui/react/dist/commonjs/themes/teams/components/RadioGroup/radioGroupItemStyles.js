"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _lib = require("../../../../lib");

var _Icon = _interopRequireDefault(require("../../../../components/Icon/Icon"));

var _getBorderFocusStyles = _interopRequireDefault(require("../../getBorderFocusStyles"));

var _getIconFillOrOutlineStyles = _interopRequireDefault(require("../../getIconFillOrOutlineStyles"));

var restHoverFocusTextColor = function restHoverFocusTextColor(textColor) {
  return {
    color: textColor,
    ':hover': {
      color: textColor
    },
    ':focus': {
      color: textColor
    }
  };
};

var radioStyles = {
  root: function root(_ref) {
    var p = _ref.props,
        v = _ref.variables,
        siteVariables = _ref.theme.siteVariables;
    return Object.assign({
      position: 'relative',
      alignItems: 'center',
      borderStyle: 'solid',
      borderWidth: "".concat((0, _lib.pxToRem)(1)),
      borderColor: 'transparent',
      borderRadius: "".concat((0, _lib.pxToRem)(2)),
      color: v.textColorDefault,
      cursor: 'pointer',
      display: p.vertical ? 'flex' : 'inline-flex',
      fontSize: v.textFontSize,
      padding: v.padding,
      ':hover': (0, _defineProperty2.default)({
        color: v.textColorDefaultHoverFocus
      }, "& .".concat(_Icon.default.className), {
        color: v.iconBorderColorDefaultHover
      }),
      ':focus': {
        color: v.textColorDefaultHoverFocus
      }
    }, p.checked && Object.assign({}, restHoverFocusTextColor(v.textColorChecked)), p.disabled && Object.assign({}, restHoverFocusTextColor(v.colorDisabled)), (0, _getBorderFocusStyles.default)({
      siteVariables: siteVariables
    }));
  },
  icon: function icon(_ref2) {
    var p = _ref2.props,
        v = _ref2.variables;
    return Object.assign({
      // overrides from icon styles
      boxShadow: 'none',
      margin: "0 ".concat((0, _lib.pxToRem)(12), " 0 0")
    }, (0, _getIconFillOrOutlineStyles.default)({
      outline: !p.checked
    }), p.checked && {
      color: v.iconBackgroundColorChecked
    }, p.disabled && {
      color: v.colorDisabled
    }, p.checked && p.disabled && {
      color: v.colorDisabled
    });
  }
};
var _default = radioStyles;
exports.default = _default;