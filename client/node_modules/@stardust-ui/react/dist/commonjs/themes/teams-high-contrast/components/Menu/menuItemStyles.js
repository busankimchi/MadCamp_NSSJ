"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _menuItemStyles = require("../../../teams/components/Menu/menuItemStyles");

var menuItemStyles = {
  wrapper: function wrapper(_ref) {
    var p = _ref.props,
        v = _ref.variables;
    var iconOnly = p.iconOnly,
        isFromKeyboard = p.isFromKeyboard,
        vertical = p.vertical,
        active = p.active,
        underlined = p.underlined,
        primary = p.primary,
        pointing = p.pointing,
        disabled = p.disabled;
    return Object.assign({
      ':hover': Object.assign({
        color: v.colorActive
      }, !active && Object.assign({}, primary && !underlined && {
        color: v.colorActive
      }, {
        background: v.backgroundColorFocus
      }))
    }, active && !underlined && {
      background: v.backgroundColorActive,
      color: v.colorActive
    }, (iconOnly || vertical) && Object.assign({}, isFromKeyboard && {
      color: v.colorActive,
      background: v.backgroundColorFocus
    }, active && {
      color: v.colorActive,
      background: v.backgroundColorActive
    }, {
      ':hover': {
        color: v.colorActive,
        background: v.backgroundColorFocus
      }
    }), underlined && Object.assign({}, active && {
      color: v.color
    }, {
      ':hover': {
        color: v.color
      }
    }, isFromKeyboard && {
      color: v.colorActive
    }), pointing && vertical && {
      '::before': {
        display: 'none'
      }
    }, disabled && {
      cursor: 'default',
      ':hover': {// reset all existing hover styles
      }
    });
  },
  root: function root(_ref2) {
    var props = _ref2.props,
        v = _ref2.variables;
    var iconOnly = props.iconOnly,
        isFromKeyboard = props.isFromKeyboard,
        underlined = props.underlined,
        primary = props.primary,
        color = props.color,
        active = props.active;
    return Object.assign({}, underlined && Object.assign({}, active && Object.assign({
      color: v.color
    }, !primary && !color && Object.assign({}, (0, _menuItemStyles.underlinedItem)(v.color))), {
      ':hover': {
        color: v.color
      }
    }, isFromKeyboard && {
      color: v.colorActive
    }), isFromKeyboard && iconOnly && {
      borderColor: 'transparent'
    });
  }
};
var _default = menuItemStyles;
exports.default = _default;