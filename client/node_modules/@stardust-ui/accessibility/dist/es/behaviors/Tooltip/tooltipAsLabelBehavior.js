import tooltipBehavior from './tooltipBehavior';
/**
 * @specification
 * Adds attribute 'role=tooltip' to 'tooltip' slot.
 * Adds attribute 'aria-hidden=false' to 'tooltip' slot if 'open' property is true. Sets the attribute to 'true' otherwise.
 * Adds attribute 'aria-labelledby' based on the property 'aria-labelledby' to 'trigger' slot.
 * Triggers 'close' action with 'Escape' on 'trigger'.
 */

var tooltipAsLabelBehavior = function tooltipAsLabelBehavior(props) {
  var behaviorData = tooltipBehavior(props);
  var defaultAriaLabeledBy = getDefaultAriaLabelledBy(props);
  behaviorData.attributes = {
    trigger: {
      'aria-labelledby': defaultAriaLabeledBy || props['aria-labelledby']
    },
    tooltip: Object.assign({}, behaviorData.attributes.tooltip, {
      id: defaultAriaLabeledBy
    })
  };
  return behaviorData;
};

export default tooltipAsLabelBehavior;
/**
 * Returns the element id of the tooltip, it is used when user does not provide aria-label or
 * aria-labelledby as props.
 */

var getDefaultAriaLabelledBy = function getDefaultAriaLabelledBy(props) {
  if (props['aria-label'] || props['aria-labelledby']) {
    return undefined;
  }

  return props.contentId;
};