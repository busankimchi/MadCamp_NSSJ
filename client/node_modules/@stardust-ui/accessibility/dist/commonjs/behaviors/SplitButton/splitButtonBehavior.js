"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _merge2 = _interopRequireDefault(require("lodash/merge"));

var keyboardKey = _interopRequireWildcard(require("keyboard-key"));

var _menuButtonBehavior = _interopRequireDefault(require("../MenuButton/menuButtonBehavior"));

/**
 * @specification
 * Adds attribute 'tabIndex=-1' to 'toggleButton' slot.
 * Adds attribute 'aria-haspopup=true' to 'toggleButton' slot.
 */
var splitButtonBehavior = function splitButtonBehavior(props) {
  var splitButtonMenuButtonBehavior = function splitButtonMenuButtonBehavior(props) {
    var menuButtonBehaviorData = (0, _menuButtonBehavior.default)(props);
    return (0, _merge2.default)(menuButtonBehaviorData, {
      keyActions: {
        trigger: {
          open: {
            keyCombinations: [{
              keyCode: keyboardKey.ArrowDown,
              altKey: true
            }]
          }
        },
        popup: {
          closeAndFocusTrigger: {
            keyCombinations: [{
              keyCode: keyboardKey.Escape
            }, {
              keyCode: keyboardKey.ArrowUp,
              altKey: true
            }]
          }
        }
      }
    });
  };

  return {
    attributes: {
      root: {},
      toggleButton: {
        tabIndex: -1,
        'aria-haspopup': true
      }
    },
    childBehaviors: {
      menuButton: splitButtonMenuButtonBehavior
    }
  };
};

var _default = splitButtonBehavior;
exports.default = _default;