{"ast":null,"code":"import _objectSpread from \"C:\\\\workspaces\\\\happy\\\\MadCamp_NSSJ\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\workspaces\\\\happy\\\\MadCamp_NSSJ\\\\client\\\\src\\\\pages\\\\Wanted.js\";\nimport React, { Component } from 'react';\nimport BoardForm from '../components/WantedComp/BoardForm';\nimport BoardItem from '../components/WantedComp/BoardItem';\n\nclass Wanted extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      maxNo: 3,\n      boards: [{\n        brdno: 1,\n        brdwriter: 'Lee SunSin',\n        brdtitle: 'If you intend to live then you die',\n        brddate: new Date()\n      }, {\n        brdno: 2,\n        brdwriter: 'So SiNo',\n        brdtitle: 'Founder for two countries',\n        brddate: new Date()\n      }],\n      selectedBoard: {}\n    };\n\n    this.handleSaveData = data => {\n      if (!data.brdno) {\n        // new : Insert\n        this.setState({\n          maxNo: this.state.maxNo + 1,\n          boards: this.state.boards.concat(_objectSpread({\n            brdno: this.state.maxNo,\n            brddate: new Date()\n          }, data)),\n          selectedBoard: {}\n        });\n      } else {\n        // Update\n        this.setState({\n          boards: this.state.boards.map(row => data.brdno === row.brdno ? _objectSpread({}, data) : row),\n          selectedBoard: {}\n        });\n      }\n    };\n\n    this.handleRemove = brdno => {\n      this.setState({\n        boards: this.state.boards.filter(row => row.brdno !== brdno)\n      });\n    };\n\n    this.handleSelectRow = row => {\n      this.setState({\n        selectedBoard: row\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          boards = _this$state.boards,\n          selectedBoard = _this$state.selectedBoard;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(BoardForm, {\n      selectedBoard: selectedBoard,\n      onSaveData: this.handleSaveData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      border: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"No.\"), React.createElement(\"td\", {\n      width: \"300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"td\", {\n      width: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"td\", {\n      width: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Date\")), boards.map(row => React.createElement(BoardItem, {\n      key: row.brdno,\n      row: row,\n      onRemove: this.handleRemove,\n      onSelectRow: this.handleSelectRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })))));\n  }\n\n}\n\n;\nexport default Wanted;","map":{"version":3,"sources":["C:/workspaces/happy/MadCamp_NSSJ/client/src/pages/Wanted.js"],"names":["React","Component","BoardForm","BoardItem","Wanted","state","maxNo","boards","brdno","brdwriter","brdtitle","brddate","Date","selectedBoard","handleSaveData","data","setState","concat","map","row","handleRemove","filter","handleSelectRow","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport BoardForm from '../components/WantedComp/BoardForm'\r\nimport BoardItem from '../components/WantedComp/BoardItem'\r\n\r\nclass Wanted extends Component {\r\n    state = {\r\n        maxNo: 3,\r\n        boards: [\r\n            {\r\n                brdno: 1,\r\n                brdwriter: 'Lee SunSin',\r\n                brdtitle: 'If you intend to live then you die',\r\n                brddate: new Date()\r\n            },\r\n            {\r\n                brdno: 2,\r\n                brdwriter: 'So SiNo',\r\n                brdtitle: 'Founder for two countries',\r\n                brddate: new Date()\r\n            }\r\n        ],\r\n        selectedBoard: {}\r\n    }\r\n\r\n    handleSaveData = (data) => {\r\n        if (!data.brdno) {            // new : Insert\r\n            this.setState({\r\n                maxNo: this.state.maxNo + 1,\r\n                boards: this.state.boards.concat({ brdno: this.state.maxNo, brddate: new Date(), ...data }),\r\n                selectedBoard: {}\r\n            });\r\n        } else {                                                        // Update\r\n            this.setState({\r\n                boards: this.state.boards.map(row => data.brdno === row.brdno ? { ...data } : row),\r\n                selectedBoard: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    handleRemove = (brdno) => {\r\n        this.setState({\r\n            boards: this.state.boards.filter(row => row.brdno !== brdno)\r\n        })\r\n    }\r\n\r\n    handleSelectRow = (row) => {\r\n        this.setState({ selectedBoard: row });\r\n    }\r\n\r\n    render() {\r\n        const { boards, selectedBoard } = this.state;\r\n        return (\r\n            <div>\r\n                <BoardForm selectedBoard={selectedBoard} onSaveData={this.handleSaveData} />\r\n                <table border=\"1\">\r\n                    <tbody>\r\n                        <tr align=\"center\">\r\n                            <td width=\"50\">No.</td>\r\n                            <td width=\"300\">Title</td>\r\n                            <td width=\"100\">Name</td>\r\n                            <td width=\"100\">Date</td>\r\n                        </tr>\r\n                        {\r\n                            boards.map(row => (\r\n                                <BoardItem\r\n                                    key={row.brdno}\r\n                                    row={row}\r\n                                    onRemove={this.handleRemove}\r\n                                    onSelectRow={this.handleSelectRow} />\r\n                            )\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Wanted;"]},"metadata":{},"sourceType":"module"}