{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\q\\\\Desktop\\\\0111\\\\MadCamp_NSSJ\\\\client\\\\src\\\\containers\\\\Auth\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink } from 'components/Auth';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newUser = {\n        email: this.state.email,\n        username: this.state.username,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n      console.log(newUser);\n      this.props.registerUser(newUser, this.props.history);\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    console.log(\"register\");\n    const errors = this.state.errors;\n    return React.createElement(AuthContent, {\n      title: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(InputWithLabel, {\n      label: \"\\uC774\\uBA54\\uC77C\",\n      name: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      onChange: this.onChange,\n      value: this.state.email,\n      error: errors.email,\n      id: \"email\",\n      type: \"text\",\n      className: classnames(\"\", {\n        invalid: errors.email\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(InputWithLabel, {\n      label: \"\\uC544\\uC774\\uB514\",\n      name: \"username\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      onChange: this.onChange,\n      value: this.state.username,\n      error: errors.uername,\n      id: \"username\",\n      type: \"username\",\n      className: classnames(\"\", {\n        invalid: errors.username\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(InputWithLabel, {\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      name: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(InputWithLabel, {\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      name: \"passwordConfirm\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n      type: \"password\",\n      onChange: this.onChange,\n      value: this.state.password2,\n      error: errors.password2,\n      id: \"password2\",\n      className: classnames(\"\", {\n        invalid: errors.password2\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(AuthButton, {\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), React.createElement(RightAlignedLink, {\n      to: \"/auth/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC778\")));\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["C:/Users/q/Desktop/0111/MadCamp_NSSJ/client/src/containers/Auth/Register.js"],"names":["React","Component","Link","withRouter","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","PropTypes","connect","registerUser","classnames","Register","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","email","state","username","password","password2","console","log","props","history","name","errors","componentDidMount","auth","isAuthenticated","push","componentWillReceiveProps","nextProps","render","invalid","uername","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink } from 'components/Auth';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\n\r\nclass Register extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          password2: \"\",\r\n          errors: {}\r\n        };\r\n      }\r\n\r\n      componentDidMount() {\r\n        // If logged in and user navigates to Register page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n\r\n      componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n          this.setState({\r\n            errors: nextProps.errors\r\n          });\r\n        }\r\n      }\r\n\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n      };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n    const newUser = {\r\n          email: this.state.email,\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          password2: this.state.password2\r\n        };\r\n    console.log(newUser);\r\n    this.props.registerUser(newUser, this.props.history); \r\n      };\r\n\r\n\r\n      render() {\r\n        console.log(\"register\");\r\n            const { errors } = this.state;\r\n        return (\r\n            <AuthContent title=\"회원가입\">\r\n                <form onSubmit={this.onSubmit}>\r\n                <InputWithLabel \r\n                    label=\"이메일\"\r\n                    name=\"email\"\r\n                    placeholder=\"이메일\" \r\n                    onChange={this.onChange}\r\n                    value={this.state.email}\r\n                    error={errors.email}\r\n                    id=\"email\"\r\n                    type=\"text\"\r\n                    className={classnames(\"\", {\r\n                        invalid: errors.email\r\n                      })}\r\n             \r\n                />\r\n                <InputWithLabel \r\n                    label=\"아이디\" \r\n                    name=\"username\" \r\n                    placeholder=\"아이디\" \r\n                    onChange={this.onChange}\r\n                    value={this.state.username}\r\n                    error={errors.uername}\r\n                    id=\"username\"\r\n                    type=\"username\"   \r\n                    className={classnames(\"\", {\r\n                        invalid: errors.username\r\n                      })}        \r\n                />\r\n                <InputWithLabel \r\n                    label=\"비밀번호\" \r\n                    name=\"password\" \r\n                    placeholder=\"비밀번호\"\r\n                    \r\n                    onChange={this.onChange}\r\n                    value={this.state.password}\r\n                    error={errors.password}\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    className={classnames(\"\", {\r\n                        invalid: errors.password\r\n                      })}\r\n         \r\n                />\r\n                <InputWithLabel \r\n                    label=\"비밀번호 확인\" \r\n                    name=\"passwordConfirm\" \r\n                    placeholder=\"비밀번호 확인\" \r\n                    type=\"password\" \r\n                    onChange={this.onChange}\r\n                    value={this.state.password2}\r\n                    error={errors.password2}\r\n                    id=\"password2\"\r\n                    className={classnames(\"\", {\r\n                        invalid: errors.password2\r\n                      })}\r\n  \r\n                />\r\n                <AuthButton onClick={this.onSubmit}>회원가입</AuthButton>\r\n                <RightAlignedLink to=\"/auth/login\">로그인</RightAlignedLink>\r\n                </form>\r\n            </AuthContent>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n  };\r\n  const mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n  });\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n  )(withRouter(Register));"]},"metadata":{},"sourceType":"module"}