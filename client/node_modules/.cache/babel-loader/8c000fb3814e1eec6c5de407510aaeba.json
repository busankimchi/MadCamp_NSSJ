{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\q\\\\Desktop\\\\0111\\\\MadCamp_NSSJ\\\\client\\\\src\\\\containers\\\\Auth\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink } from 'components/Auth';\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData);\n      console.log(userData);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(AuthContent, {\n      title: \"\\uB85C\\uADF8\\uC778\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(InputWithLabel, {\n      label: \"\\uC774\\uBA54\\uC77C\",\n      name: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      onChange: this.onChange,\n      value: this.state.email,\n      error: errors.email,\n      id: \"email\",\n      type: \"email\",\n      className: classnames(\"\", {\n        invalid: errors.email || errors.emailnotfound\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(InputWithLabel, {\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      name: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      type: \"password\",\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password || errors.passwordincorrect\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(AuthButton, {\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC778\")), React.createElement(RightAlignedLink, {\n      to: \"/auth/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["C:/Users/q/Desktop/0111/MadCamp_NSSJ/client/src/containers/Auth/Login.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","Link","PropTypes","connect","loginUser","classnames","Login","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","email","state","password","props","console","log","errors","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","render","invalid","emailnotfound","passwordincorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink } from 'components/Auth';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          email: \"\",\r\n          password: \"\",\r\n          errors: {}\r\n        };\r\n      }\r\n      \r\n      componentDidMount() {\r\n        // If logged in and user navigates to Login page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n\r\n      componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n        }\r\n    if (nextProps.errors) {\r\n          this.setState({\r\n            errors: nextProps.errors\r\n          });\r\n        }\r\n      }\r\n\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n      };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n    const userData = {\r\n          email: this.state.email,\r\n          password: this.state.password\r\n        };\r\n        this.props.loginUser(userData);\r\n    console.log(userData);\r\n      };\r\n\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n       \r\n        return (\r\n            <AuthContent title=\"로그인\">\r\n                <InputWithLabel \r\n                    label=\"이메일\" \r\n                    name=\"email\" \r\n                    placeholder=\"이메일\" \r\n                    onChange={this.onChange}\r\n                    value={this.state.email}\r\n                    error={errors.email}\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    className={classnames(\"\", {\r\n                        invalid: errors.email || errors.emailnotfound\r\n                      })}\r\n                />\r\n                <InputWithLabel \r\n                    label=\"비밀번호\" \r\n                    name=\"password\" \r\n                    placeholder=\"비밀번호\" \r\n                    type=\"password\" \r\n                    onChange={this.onChange}\r\n                    value={this.state.password}\r\n                    error={errors.password}\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    className={classnames(\"\", {\r\n                        invalid: errors.password || errors.passwordincorrect\r\n                      })}\r\n                />\r\n                <Link to=\"/main\">\r\n                    <AuthButton onClick={this.onSubmit}>로그인</AuthButton>\r\n                </Link>\r\n                <RightAlignedLink to=\"/auth/register\">회원가입</RightAlignedLink>\r\n            </AuthContent>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n  };\r\n  const mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n  });\r\n  export default connect(\r\n    mapStateToProps,\r\n    { loginUser }\r\n  )(Login);"]},"metadata":{},"sourceType":"module"}